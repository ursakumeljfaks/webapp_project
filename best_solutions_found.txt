### k25
Using DE
Iteration 788966, New Best Cost: 31767.26
  Route #1: 13 25 31
  Route #2: 71 2
  Route #3: 54 23
  Route #4: 61 78
  Route #5: 53 84
  Route #6: 98 5 12
  Route #7: 52 57
  Route #8: 28 6 21
  Route #9: 94 16
  Route #10: 68 64
  Route #11: 36 86 95 45
  Route #12: 41 24 9
  Route #13: 99 81
  Route #14: 62 92
  Route #15: 19 20
  Route #16: 32 80
  Route #17: 76 42
  Route #18: 49 66 55
  Route #19: 26 56
  Route #20: 11 97
  Route #21: 17 91
  Route #22: 37 93
  Route #23: 43 18
  Route #24: 59 4
  Route #25: 83 7 29 15
========================================
Using OnePlusOne
Iteration 236600, New Best Cost: 45158.11
  Route #1: 23 25 79
  Route #2: 76 21 12
  Route #3: 10 32 63 58 88
  Route #4: 84 72 7
  Route #5: 6 31 86 92
  Route #6: 69 38 77 91
  Route #7: 3 90 49
  Route #8: 71 33 81
  Route #9: 13 85
  Route #10: 68 45
  Route #11: 19 41 5
  Route #12: 100 39 40 42
  Route #13: 67 14 56 8
  Route #14: 9 27 82 96
  Route #15: 11 18
  Route #16: 2 55 64
  Route #17: 57 22 93 66 44 47
  Route #18: 99 30 60 29
  Route #19: 17 36
  Route #20: 43 15 35 78
  Route #21: 61 89 26
  Route #22: 24 97 74
  Route #23: 94 59
  Route #24: 95 62 34
  Route #25: 75 50 16 65
========================================
Using GeneticDE
Iteration 899449, New Best Cost: 28125.61
  Route #1: 101 9
  Route #2: 68 29 81
  Route #3: 39 99 82 31
  Route #4: 53 98
  Route #5: 43 56
  Route #6: 93 78
  Route #7: 13 14 75
  Route #8: 87 42
  Route #9: 54 32
  Route #10: 91 71 16
  Route #11: 45 62
  Route #12: 84 63
  Route #13: 28 97 57
  Route #14: 4 95
  Route #15: 76 24
  Route #16: 61 37
  Route #17: 26 5
  Route #18: 94 51
  Route #19: 49 47
  Route #20: 18 59
  Route #21: 92 6
  Route #22: 83 67
  Route #23: 80 12
  Route #24: 11 19
  Route #25: 41 60 38 15
========================================
Using PSO
Iteration 703495, New Best Cost: 42839.53
  Route #1: 101 69 31
  Route #2: 32 34
  Route #3: 68 36
  Route #4: 64 38 39 40
  Route #5: 61 60 43
  Route #6: 44 59 47 48 58 50
  Route #7: 100 52
  Route #8: 53 54
  Route #9: 55 70 29 26
  Route #10: 97 4
  Route #11: 94 6
  Route #12: 7 92
  Route #13: 9 91
  Route #14: 11 12 73
  Route #15: 84 16
  Route #16: 17 83
  Route #17: 80 24
  Route #18: 78 15 57 88 45
  Route #19: 81 18 22
  Route #20: 21 33 2 72 90 82
  Route #21: 19 14 85 86
  Route #22: 87 13 89
  Route #23: 49 10 8
  Route #24: 93 5 95
  Route #25: 96 3 98 99
========================================

### k14
Using DE
Iteration 953645, New Best Cost: 43843.76
  Route #1: 53 22 14 30 49 83 92 15
  Route #2: 58 28 24 82 89 69 10
  Route #3: 68 2 9 27 86 18 61
  Route #4: 41 77 3 80 40 74 33 62
  Route #5: 105 47 101 34 64 55 91 104
  Route #6: 54 94 13 17 12 42 72
  Route #7: 38 21 100 32 6 16 37 103
  Route #8: 8 79 11 99 56 5 46 45
  Route #9: 48 81 71 90 87 39 96
  Route #10: 19 78 75 29 73 95 93
  Route #11: 88 35 59 44 97 85 52
  Route #12: 26 63 36 43 4 57 50 23
  Route #13: 76 66 7 51 60 67 20
  Route #14: 31 25 102 84 98 65 70 106
========================================
Using OnePlusOne
Iteration 200330, New Best Cost: 48885.72
  Route #1: 29 21 47 103 85 78 6 104
  Route #2: 8 43 4 58 99 90 42 95 55
  Route #3: 61 96 53 28 100 44 63
  Route #4: 3 92 10 80 69 54 13
  Route #5: 32 76 11 59 20 49 15 51
  Route #6: 72 68 86 25 2 106 57
  Route #7: 82 71 36 5 48 27 79
  Route #8: 73 24 37 26 39 75 41
  Route #9: 83 35 93 101 46 97 74
  Route #10: 34 12 16 45 67 40 50
  Route #11: 31 60 38 77 56 66 81 19 64
  Route #12: 33 89 94 23 91 65 87 17
  Route #13: 98 14 52 9 84 70 88 105
  Route #14: 30 18 22 7 62 102
========================================
Using GeneticDE
Iteration 994377, New Best Cost: 37791.12
  Route #1: 26 60 5 31 51 24 44
  Route #2: 20 11 48 59 28 9 83
  Route #3: 12 40 36 74 4 90 62 96
  Route #4: 27 76 85 25 88 2 45
  Route #5: 54 52 94 50 15 22 13
  Route #6: 103 101 10 102 30 32 65 68
  Route #7: 69 71 99 33 58 46 6
  Route #8: 8 92 93 104 16 53
  Route #9: 37 49 105 14 41 18 19 38
  Route #10: 91 86 73 72 84 64 55
  Route #11: 43 39 106 97 67 87 57
  Route #12: 80 29 98 79 61 23 63
  Route #13: 34 82 17 21 95 75
  Route #14: 35 77 47 89 70 42 7 66
========================================
Using PSO
Iteration 833473, New Best Cost: 47808.77
  Route #1: 90 36 74 38 39 40 42 43
  Route #2: 44 45 88 49 86 92 51
  Route #3: 53 105 85 59 82 81 63
  Route #4: 64 65 79 77 70 52 32 73
  Route #5: 15 14 31 11 99 7 5 98
  Route #6: 20 97 13 22 4 24 96 26
  Route #7: 27 95 3 29 23 101 93 48
  Route #8: 2 18 9 56 84 75 91
  Route #9: 76 89 78 104 103 80 102 100
  Route #10: 83 87 94 54 71 6 8
  Route #11: 10 12 16 17 19 21
  Route #12: 25 28 30 33 34 35 37 41
  Route #13: 46 47 50 55 57 58 60 61
  Route #14: 62 66 67 68 69 72 106
========================================

### k13
Using GeneticDE
Iteration 998548, New Best Cost: 34826.34
  Route #1: 72 3 40 13 27 52 78 58
  Route #2: 109 92 45 48 8 101 64 36 55
  Route #3: 86 53 97 76 96 28 69 94 61 84 31
  Route #4: 16 25 12 104 90 33 107 14
  Route #5: 24 41 9 110 60 18 66
  Route #6: 50 5 88 70 71 68 2 20
  Route #7: 89 22 108 38 82 30 59
  Route #8: 63 42 29 73 32 11 4
  Route #9: 34 67 98 21 79 23 62 44
  Route #10: 6 106 83 39 47 7 102 46 35
  Route #11: 17 80 19 54 99 43 93 75
  Route #12: 51 87 49 91 95 74 15
  Route #13: 85 26 103 57 37 65 105 100 56
========================================

Using DE
Iteration 966811, New Best Cost: 37777.08
  Route #1: 18 105 66 27 19 54 99 16 52
  Route #2: 58 9 46 67 86 78 35 92
  Route #3: 10 103 39 104 110 55 81 32 60 97
  Route #4: 20 76 77 68 62 84 94 51 50
  Route #5: 40 65 61 88 56 69 89 3
  Route #6: 109 100 70 26 5 23 29 17
  Route #7: 25 34 44 72 73 87 101 13
  Route #8: 82 95 79 30 45 38 8 107
  Route #9: 59 49 74 91 96 28 4 53
  Route #10: 12 57 31 47 41 33 14 22
  Route #11: 15 24 36 37 75 21 43 93
  Route #12: 42 64 63 83 108 71 48 11
  Route #13: 6 85 102 90 2 80 106 98 7
========================================

Using PSO
Iteration 571045, New Best Cost: 48782.45
  Route #1: 2 37 44 47 48 49 50
  Route #2: 52 54 58 63 66 67 32 77
  Route #3: 79 83 86 87 89 91 95 96 97
  Route #4: 100 101 105 78 31 56 29 3
  Route #5: 4 11 13 14 15 16 17 19 20
  Route #6: 22 23 25 110 27 70 21 93
  Route #7: 60 65 72 92 9 90 26 88
  Route #8: 35 12 85 84 94 10 7 36 6
  Route #9: 98 99 5 34 102 103 104 33 106 107
  Route #10: 108 8 82 38 80 45 24 51
  Route #11: 43 53 55 109 57 42 59 61 62
  Route #12: 81 41 18 40 68 69 30 73 74
  Route #13: 75 76 39 46 28 64 71
========================================

Using OnePlusOne
Iteration 15088, New Best Cost: 53442.82
  Route #1: 63 23 56 37 6 17 11 69
  Route #2: 27 79 87 3 77 28 99 58 14
  Route #3: 46 44 38 22 72 45 12
  Route #4: 83 88 67 98 93 108 61 4
  Route #5: 21 49 91 19 7 32 26 8
  Route #6: 55 2 81 10 13 42 18 34
  Route #7: 52 57 75 102 105 97 65 5 47
  Route #8: 110 82 94 104 66 15 100 76
  Route #9: 106 86 60 31 73 41 16 84 103
  Route #10: 20 89 96 95 74 48 36 54 90
  Route #11: 35 70 92 43 85 40 51 71
  Route #12: 29 53 33 24 25 59 80 62
  Route #13: 64 101 50 107 30 68 78 39 109
========================================


---Using GeneticDE on all, increased penalty_weight to 10000.0---

#k13, optimum = 14971
instance = load_vrp_file("/Users/janze/Documents/ijs/webapp_project/X-n110-k13.vrp")
num_customers = len(instance.demands) - 1  # Dont include depot
num_vehicles = 13 
print(solve_vrp(instance=instance, num_vehicles=num_vehicles, budget=100000, optimizer_name="GeneticDE"))
ANSWER: 35749.144565434464

#k25, optimum = 27591
instance = load_vrp_file("/Users/janze/Documents/ijs/webapp_project/X-n101-k25.vrp")
num_customers = len(instance.demands) - 1  # Dont include depot
num_vehicles = 25  # k25 file name
print(solve_vrp(instance=instance, num_vehicles=num_vehicles, budget=1000000, optimizer_name="GeneticDE"))
ANSWER: 27874.250455381018

#k14, optimum = 26362
instance = load_vrp_file("/Users/janze/Documents/ijs/webapp_project/X-n106-k14.vrp")
num_customers = len(instance.demands) - 1  # Dont include depot
num_vehicles = 14  
print(solve_vrp(instance=instance, num_vehicles=num_vehicles, budget=1000000, optimizer_name="GeneticDE"))
ANSWER: 36159.37616151034

========================================

---Using the script better_vrp_solutions.py---

#k25, optimum = 27591
Objective value: 29248
Error = |27591-29248|/27591 = 0.0601 => 6%
! also there is a mistake it should probably be k26, because there are 26 routes

#k14, optimum = 26362
Objective value: 27124
Error = |26362-27124|/26362 = 0.0289 => 2.89%

#k13, optimum = 14971
Objective value: 15550
Error = |14971-15550|/14971 = 0.0372 => 3.72%

#k10, optimum = 12747
Objective value: 13379
Error = |26362-27124|/26362 = 0.0496 => 4.96%